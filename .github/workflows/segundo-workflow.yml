name: Segundo Workflow

# Vamos implementar dois eventos gatilho para disparar o pipeline
on:
  # vamos incluir dois eventos na lista na branch develop
  push:
    branches: [develop, main, master]
  # podemos também incluir eventos de solicitaçoes pull_request como gatilho para a execução do pipeline
  pull_request:
    branches: [develop, main, master]

# agora vamos implementar os trabalhos a serem executados de forma paralela e com dependência
jobs:
  tarefa1:
    name: Primeira tarefa
    # Irá executar no container virtual linux
    runs-on: ubuntu-latest
    # vamos criar os passos a serem executados nesta tarefa
    steps:
      - name: Primeiro passo
        run: echo "Simulando a execução do primeiro passo."

      - name: Segundo passo
        run: echo "Simulando a execução do segundo passo."

      - name: Terceiro passo
        run: echo "Simulando a execução do terceiro passo."

      - name: Quarto passo
        run: echo "Simulando a execução do quarto passo."

  tarefa2:
    name: Segunda tarefa
    # Irá executar também no container virtual linux
    runs-on: ubuntu-latest
    # vamos criar os passos a serem executados nesta tarefa
    steps:
      - name: Quinto passo
        run: echo "Simulando a execução do quinto passo."

      - name: Sexto passo
        run: echo "Simulando a execução do sexto passo."

      - name: Setimo passo       
        run: echo "Simulando a execução do setimo passo."

  tarefa3:
    name: Terceira tarefa
    # vamos simular a dependência do terceiro trabalho dependendo do primeiro
    needs: tarefa1
    # Irá executar também no container virtual linux
    runs-on: ubuntu-latest
    # vamos criar os passos a serem executados nesta tarefa
    steps:
      - name: Oitavo passo
        run: echo "Simulando a execução do oitavo passo."

      - name: Nono passo
        run: echo "Simulando a execução do nono passo."

      - name: Decimo passo       
        run: echo "Simulando a execução do decimo passo."
        